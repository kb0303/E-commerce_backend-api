{
	"openapi": "3.0.0",
	"info": {
		"version": "1.0.0",
		"description": "API for E-Commerce application",
		"title": "E-Commerce API"
	},
	"servers": [
		{
			"url": "http://localhost:3000"
		}
	],
	"components": {
		"securitySchemes": {
			"jwt": {
				"in": "header",
				"name": "Authorization",
				"type": "apiKey"
			}
		}
	},
	"paths": {
		"/api/products": {
			"get": {
				"tags": [
					"Products"
				],
				"summary": "Get Products",
				"description": "User will get all products",
				"security": [
					{
						"jwt": {}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"401": {
						"description": "Unauthorized"
					}
				}
			},
			"post": {
				"tags": [
					"Products"
				],
				"summary": "Add a Product",
				"description": "User(Seller) will be able to add products",
				"security": [
					{
						"jwt": {}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the product"
									},
									"desc": {
										"type": "string",
										"description": "The description of the product"
									},
									"price": {
										"type": "number",
										"format": "float",
										"description": "The price of the product"
									},
									"category": {
										"type": "string",
										"description": "The category of the product"
									},
									"sizes": {
										"type": "array",
										"items": {
											"type": "string",
											"description": "The available sizes of the product"
										}
									},
									"imageUrl": {
										"type": "string",
										"format": "binary",
										"description": "The image of the product"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/api/products/{id}": {
			"get": {
				"tags": [
					"Products"
				],
				"summary": "Get Product By Id",
				"description": "User will get product by Id",
				"security": [
					{
						"jwt": {}
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Enter Product ID: ",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"404": {
						"description": "Product not found"
					}
				}
			}
		},
		"/api/products/filteredProducts": {
			"get": {
				"tags": [
					"Products"
				],
				"summary": "Get filtered Products",
				"description": "Get Products filtered by min price, max price, and category",
				"security": [
					{
						"jwt": {}
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "minPrice",
						"description": "Enter Minimum Price: ",
						"schema": {
							"type": "number",
							"format": "float"
						}
					},
					{
						"in": "query",
						"name": "maxPrice",
						"description": "Enter Maximum Price: ",
						"schema": {
							"type": "number",
							"format": "float"
						}
					},
					{
						"in": "query",
						"name": "category",
						"description": "Enter Product Category: ",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"404": {
						"description": "Product not found"
					}
				}
			}
		},
		"/api/cart": {
			"get": {
				"tags": [
					"Cart"
				],
				"summary": "Get Cart Items",
				"description": "User will get all Cart Items that user added",
				"security": [
					{
						"jwt": {}
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					},
					"404": {
						"description": "Cart is empty, Add items to the cart"
					}
				}
			},
			"post": {
				"tags": [
					"Cart"
				],
				"summary": "Add Items to the cart",
				"description": "Add Items to the cart with productId and quantity",
				"security": [
					{
						"jwt": {}
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "productId",
						"description": "Enter productId: ",
						"schema": {
							"type": "number",
							"format": "float"
						}
					},
					{
						"in": "query",
						"name": "quantity",
						"description": "Enter Product Quantity: ",
						"schema": {
							"type": "number",
							"format": "float"
						}
					}
				],
				"responses": {
					"201": {
						"description": "cart updated, item added"
					}
				}
			},
			"put": {
				"tags": [
					"Cart"
				],
				"summary": "Update Items quantity in the cart",
				"description": "Update Items quantity in the cart with productId and quantity",
				"security": [
					{
						"jwt": {}
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "productId",
						"description": "Enter productId: ",
						"schema": {
							"type": "number",
							"format": "float"
						}
					},
					{
						"in": "query",
						"name": "quantity",
						"description": "Enter Product Quantity: ",
						"schema": {
							"type": "number",
							"format": "float"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Cart Item update successfully"
					}
				}
			}
		},
		"/api/cart/{id}": {
			"delete": {
				"tags": [
					"Cart"
				],
				"summary": "Delete Items from the cart",
				"description": "Update Items quantity in the cart with productId and quantity",
				"security": [
					{
						"jwt": {}
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"description": "Enter Cart Item ID: ",
						"required": true,
						"schema": {
							"type": "number",
							"format": "float"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Item has been deleted from the cart"
					}
				}
			}
		},
		"/api/user/signIn": {
			"post": {
				"tags": [
					"User"
				],
				"summary": "login",
				"description": "User login to get token",
				"requestBody": {
					"content": {
						"application/json": {
							"description": "User Credentials",
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string"
									},
									"password": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Incorrect Credentials"
					}
				}
			}
		},
		"/api/user/signUp": {
			"post": {
				"tags": [
					"User"
				],
				"summary": "Register",
				"description": "User Registeration",
				"requestBody": {
					"content": {
						"application/json": {
							"description": "User Credentials",
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"type": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK"
					},
					"400": {
						"description": "Incorrect Credentials"
					}
				}
			}
		}
	}
}